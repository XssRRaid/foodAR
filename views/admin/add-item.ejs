<%- include('../includes/head.ejs') %>

    <title>Add Food Menu Item</title>

    <!-- include THREEx.ArPatternFile -->
    <script src='/js/threex-arpatternfile.js'></script>

    <!-- pattern generator -->
    <script type="text/javascript" src="/js/identicon.js"></script>

</head>
<body>
    <%- include('../includes/navigation.ejs') %>

    <div class="items-center p-8 mb-4">

        <form class="grid p-8 text-white rounded-lg gap-y-8 bg-primary" action="/admin/<% if (editing) { %>edit-item<% } else { %>add-item<% } %>" method="post" enctype="multipart/form-data">
            <div class="grid gap-y-4">
                <h2 class="text-2xl text-center underline md:">Add New Menu Item</h2>
                
                <div class="grid gap-y-4 auto-cols-max">
                    <div class="grid md:grid-cols-2 gap-x-4">

                        <div class="w-min">
                            <label for="title" class="text-sm font-medium leading-6 ">Item Title</label>
                            <div class="flex rounded-md shadow-sm w-min">
                                <input required class="text-gray-500" type="text" name="title" id="title" value="<% if (editing) { %><%= product.title %><% } %>">
                            </div>
                        </div>

                        <div>
                            <label for="title" class="text-sm font-medium leading-6 ">Project Type</label>
                            <div class="flex rounded-md shadow-sm w-min">
                                <select required class="text-gray-500" name="projectType" id="projectType" value="<% if (editing) { %><%= product.type %><% } %>">
                                    <option value="furniture">Furniture</option>
                                    <option value="food">Food Menu</option>
                                </select>
                            </div>
                        </div>
                    </div>  

                    <!-- <div class="grid md:flex gap-x-4">
                        <label for="itemImage">Upload Item Image (jpeg/png)</label>
                        <input required type="file" name="itemImage" id="itemImage" class="rounded-md w-[217px]">
                    </div> -->
        
                    <div class="grid md:flex gap-x-4">
                        <label for="itemModel">Upload 3D Model (.glb)</label>
                        <input required class=" w-[217px]" type="file" name="itemModel" id="itemModel">
                    </div>
            
                </div>

                <!-- <div class="grid gap-y-4">            
                    <div class="grid">
                        <label class="mdl-js-ripple-effect" for="patternRatioSlider">
                            <span class="">Pattern Ratio 0.65</span>
                        </label>
                         
                        <input id='patternRatioSlider' name="patternRatioSlider" class="" type="range" min="10" max="90" value="<% if (editing) { %><%= product.patternRatio * 100 %><% } else { %>65<% } %>">
                        <div class='text-xs text-teal-200' for='patternRatioSlider'>
                            Set size of inner image vs black border
                        </div>
                    </div>
            
                    <div class='grid'>
                        <label class="" for="imageSize">
                            <span class="">Image size 450px</span>
                        </label>
                        
                        <input id='imageSize' name="imageSize" class="" type="range" min="150" max="2500" value="<% if (editing) { %><%= product.imageSize %><% } else {  %>450<% } %>">
                        <div class='text-xs text-teal-200' for='imageSize'>
                            Set the pixel width/height of the image.
                        </div>
                    </div>
            
                    <div class=''>
                        <label class="" for="borderColor">
                            <span class="">Border color (choose a dark one)</span>
                        </label>
                        
                        <input id='borderColor' name="borderColor" type="text" class="text-gray-500" value="<% if (editing) { %><%= product.borderColor %><% } else { %>black<% } %>">
                        <div class='w-auto text-teal-200' for='borderColor'>
                           (hexa code or color name).
                        </div>
                    </div>
            
                </div> -->

                <!-- <div class="grid items-center justify-center w-auto">
                    <div id='imageContainer' class="md:text-2xl">Marker Image Preview</div>
                    <div id='identicon' class="grid items-center justify-center"></div>
                </div> -->

                <div class="items-center">

                <% if (editing) { %>
                    <input type="hidden" value="<%= product._id %>" name="productId">
                <% } %>
                <input type="hidden" value="<%= csrfToken %>" name="_csrf">
                    <button class="w-full text-gray-500 transition-all border-2 rounded-md bg-zinc-200 hover:bg-zinc-50 button hover:text-gray-800" type="submit">
                        <% if (editing) { %>Update Item<% } else { %>Add Item<% } %>
                    </button>
                </div>
            </div>
                        
        </form>
    </div>

<script>
    var innerImageURL = null
	var fullMarkerURL = null
	var imageName = null

    let patternRatio = 0.65
    let imageSize = 450
    let borderColor = "black"

	innerImageURL = 'image/inner-arjs.png'
	updateFullMarkerImage()

    document.querySelector('#patternRatioSlider').addEventListener('input', function(){
	// update the patternRatio number
	// patternRatio = document.querySelector('#patternRatioSlider').value/100
	// var domElement = document.querySelector('[for=patternRatioSlider] span')
	// domElement.innerHTML = `Pattern Ratio ${patternRatio.toFixed(2)}`

	// update fullMarkerImage
	// updateFullMarkerImage(patternRatio, imageSize, borderColor)
})

document.querySelector('#imageSize').addEventListener('input', function(){
	// update the patternRatio number
	// imageSize = document.querySelector('#imageSize').value
	// var domElement = document.querySelector('[for=imageSize] span')
	// domElement.innerHTML = `Image size ${imageSize}px`

	// update fullMarkerImage
	// updateFullMarkerImage(patternRatio, imageSize, borderColor)
})

document.querySelector('#borderColor').addEventListener('input', function(){
    // borderColor = document.querySelector('#borderColor').value
	// var domElement = document.querySelector('[for=borderColor] span')

	// update fullMarkerImage
	// updateFullMarkerImage(patternRatio, imageSize, borderColor)
})


// document.querySelector('#itemImage').addEventListener('change', function(){
// 	var file = this.files[0];
// 	imageName = file.name
// 	// remove file extension
// 	imageName = imageName.substring(0, imageName.lastIndexOf('.')) || imageName
// 	// debugger

// 	var reader = new FileReader();
// 	reader.onload = function(event){
// 		innerImageURL = event.target.result
// 		updateFullMarkerImage()
// 	};
// 	reader.readAsDataURL(file);
// })

function updateFullMarkerImage(){
		// get patternRatio
		var patternRatio = document.querySelector('#patternRatioSlider').value/100
		var imageSize = document.querySelector('#imageSize').value
		var borderColor = document.querySelector('#borderColor').value

		// var patternRatio = 50/100
		// var imageSize = 512
		// var borderColor = "black"
		
		function hexaColor(color) {
			return /^#[0-9A-F]{6}$/i.test(color);
		};

		var s = new Option().style;
		s.color = borderColor;
  		if (borderColor === '' || (s.color != borderColor && !hexaColor(borderColor))) {
			// if color not valid, use black
			borderColor = 'black';
		}

		THREEx.ArPatternFile.buildFullMarker(innerImageURL, patternRatio, imageSize, borderColor, function onComplete(markerUrl){
            // alert(markerUrl)
			
            fullMarkerURL = markerUrl

			var fullMarkerImage = document.createElement('img')
			fullMarkerImage.src = fullMarkerURL



			// put fullMarkerImage into #imageContainer
			var container = document.querySelector('#imageContainer')

			while (container.firstChild) container.removeChild(container.firstChild);
			container.appendChild(fullMarkerImage)
		})
	}

    document.querySelector('#title').addEventListener('input', function() {

        // var title = new Date().getTime().toString() + '-' + document.querySelector('#title').value
        identicon.generate({ id: title, size: 350 }, function(err, buffer) {

            // if (err) throw err;

            // var img = new Image();
            // img.src = buffer;
            // document.getElementById('identicon').appendChild(img);

            // put fullMarkerImage into #imageContainer
            // var container = document.querySelector('#identicon')

            // while (container.firstChild) container.removeChild(container.firstChild);
            // stopped marker preview
            // container.appendChild(img)
        });
    })


</script>

</body>
</html>